Count the Coprimes

Solution:
from math import gcd
from collections import defaultdict

class Solution:
    def cntCoprime(self, arr):
        n = len(arr)
        max_val = max(arr)

        # Frequency of each number
        freq = [0] * (max_val + 1)
        for num in arr:
            freq[num] += 1

        # Count how many numbers are divisible by each number g (1 to max_val)
        div_count = [0] * (max_val + 1)
        for i in range(1, max_val + 1):
            for j in range(i, max_val + 1, i):
                div_count[i] += freq[j]

        # Total number of pairs with GCD == g
        pair_with_gcd = [0] * (max_val + 1)
        for i in range(max_val, 0, -1):
            total = div_count[i]
            pair_with_gcd[i] = (total * (total - 1)) // 2
            # Subtract multiples (inclusion-exclusion)
            j = 2 * i
            while j <= max_val:
                pair_with_gcd[i] -= pair_with_gcd[j]
                j += i

        return pair_with_gcd[1]  # GCD = 1 â†’ co-prime pairs
