LCM Triplet
Solution:
from math import gcd

class Solution:
    def lcmTriplets(self, n):
        # Function to calculate LCM
        def lcm(a, b):
            return a * b // gcd(a, b)
        
        # Edge case
        if n == 1:
            return 1
        elif n == 2:
            return 2
        elif n == 3:
            return 6

        # If n is even, try to avoid even-even-even triplet
        # because it reduces LCM due to common factors.
        if n % 2 == 0:
            ans1 = lcm(n, lcm(n-1, n-3))  # skip n-2
            ans2 = lcm(n-1, lcm(n-2, n-3))
            return max(ans1, ans2)
        else:
            # Best when n is odd: use (n, n-1, n-2)
            return lcm(n, lcm(n-1, n-2))
